PRACTICA DE SEGURIDAD EN REDES DE ORDENADORES.

USO DE GPG Y COMANDOS DE OPENSSL

Esta práctica consiste en aprender a utilizar GPG y los comandos de
OpenSSL para cifrar y descifrar ficheros, y gestionar las claves
públicas del resto de usuarios.

ENTREGA: el usuario debe responder a las preguntas en este mismo
fichero, en el hueco indicado. Las respuestas deben estar escritas en
texto plano UTF-8 **CORRECTAMENTE FORMATEADO** , respondiendo a las
preguntas, resumiendo los pasos que ha tenido que seguir para realizar
cada apartado de la práctica y especificando los comandos que ha
ejecutado. SE DEBEN ESPECIFICAR TODOS LOS COMANDOS PARA REALIZAR CADA
PARTE DE CADA APARTADO DEL ENUNCIADO.

Entregue la memoria como indica el último apartado del enunciado.


1. Cree su par de claves GPG, eligiendo como algoritmo RSA de 4096
bits. Elija una passphrase segura.

COMANDO:
====================================================

gpg --gen-key

Una vez ejecutado el comando, seguimos los pasos para obtener la clave RSA 
con 4096 bits

====================================================

2. Descargue la clave pública del profesor y guárdela en
su anillo de claves. Puede descargar la clave del profesor Enrique Soriano
de:

	http://lsub.org/who/esoriano/index.html

O del servidor de claves de RedIris (pgp.rediris.es). Compruebe que en
ambos sitios la clave pública de Enrique Soriano es la misma.

COMANDOS:
====================================================

Se copia la clave de la página del profesor en un fichero 
(PGP_Public_Key_Enrique.asc).
Una vez realizada esta operación, ejecutamos el comando:

gpg --import PGP_Public_Key_Enrique.asc

También podríamos encontrar la clave en la pagina de rederis, buscando 
por Enrique Soriano en http://www.rediris.es/keyserver/ 

gpg --keyserver pgp.rediris.es --recv-key F90A5363

*Nota, el número mágico del último comando corresponde al id de clave 
de Enrique Soriano.

====================================================

3. ¿Puede estar seguro de que esas claves descargadas son auténticas y
pertenecen a Enrique Soriano? ¿Por qué?

RESPUESTA:
====================================================

No, la clave subida ha podido ser modificada por otra persona.

====================================================

4. Compruebe la autenticidad de la clave del profesor Enrique Soriano
comprobando su  fingerprint con el que ha dado el profesor en
persona. 

COMANDOS:
====================================================

gpg --edit-key enrique.soriano@urjc.es
fpr

pub   4096R/F90A5363 2012-11-14 Enrique Soriano-Salvador <enrique.soriano@urjc.es>
Huella de clave primaria: 29C5 32C0 EE85 7DCE 384E  3627 2693 0ACA F90A 5363

Se puede comprobar que los últimos 8 dígitos hexadecimales del fingerprint 
corresponden con los 8 dígitos hexadecimales del id de clave.

====================================================

4. ¿Puede estar seguro de que la clave descargada es auténtica
y pertenece al profesor? 

RESPUESTA:
====================================================

Presencialmente el profesor ha corroborado su fingerprint por lo que la clave 
se puede descargar y estar seguro de que pertenece a Enrique Soriano.


====================================================

5. Si es así, firme la clave del profesor y suba la firma al servidor
de Rediris.

COMANDOS:
====================================================

gpg --edit-key enrique.soriano@urjc.es
sign

para firmar hay que poner mi clave privada.

gpg --keyserver pgp.rediris.es --send-keys F90A5363


====================================================

6. Comparta su clave pública con otras personas de la clase (por ejemplo
por correo electrónico). ¿Cómo exporta su clave pública? Resuma todos los
pasos para compartir su clave pública de forma segura:

COMANDO y RESPUESTA:
====================================================

Para exportar la clave pública, la guardamos en un fichero usando el comando:
gpg --output GPG_Public_Key_Saul.asc --armor --export saul.ibanez.cerro@gmail.com

Para compartirla de forma segura, lo guardo en un pendrive que me pertenece, y 
se lo dejo al compañero para que se la pueda copiar.

====================================================

7. Añada las claves de dos compañeros en su anillo. Asigne a cada compañero 
el nivel de confianza que desee.

COMANDOS:
====================================================

Obtengo las claves de Arturo Rodríguez:

gpg --keyserver pgp.rediris.es --recv-key 214B15CC
(Me cercioro con mi compañero que es su clave)

gpg --edit-key larb_90@hotmail.com
trust

El nivel de confianza para mi compañero será de 4 (Confío totalmente)


====================================================


8. Compruebe la autenticidad y la integridad de las tres versiones
del enunciado que están disponibles (1, 2, 3). ¿Puede asegurar que
alguna de las versiones fue publicada por el profesor? ¿Cuál o cuáles?
¿Por qué?

COMANDO y RESPUESTA:
====================================================

Para verificar la firma de los tres ficheros .sig, utilizamos el comando:
gpg --verify 1-practica.txt.1.sig
gpg --verify 1-practica.txt.2.sig
gpg --verify 1-practica.txt.3.sig

El único que sale la firma correcta en con el primero (solo sale correcta si el 
fichero no ha sido modificado).

====================================================

9. Descargue del foro de la asignatura el fichero p1secret.gpg,
cifrado con una clave simétrica y descífrelo. El secreto para
descifrar el fichero se comunicará en clase.

COMANDOS:
====================================================

El secreto a utilizar será: _-_practica-gpg_-_

Usamos el comando:

gpg --output fichero --decrypt p1secret.gpg

Una vez ejecutado, nos pedirá el secreto, y la imagen se habrá descifrado 
(es un mono diciendo más vale pájaro en mano que ciento volando).


====================================================

10. Descargue la firma del mensaje en claro, p1secret.sig.
¿Puede estar seguro de que el mensaje es integro (no ha sido
modificado por un atacante)? ¿Puede el profesor repudiar dicho
mensaje?

COMANDO Y RESPUESTA:
====================================================

gpg --verify p1secret.sig p1secret.gpg

gpg: Firmado el jue 05 feb 2015 17:27:46 CET usando clave RSA ID 0054BBA6
gpg: Firma INCORRECTA de «Enrique Soriano-Salvador <enrique.soriano@urjc.es>»

No se garantiza la integridad del mensaje, por lo que Enrique Soriano puede 
repudiar el mensaje.

El mensaje ha podido ser modificado por alguien, ya que no se puede estar 
seguros del propietario.

====================================================

11. Cifre esa misma imagen con el algoritmo de clave simétrica AES, con
una clave de 256 bits, usando el comando gpg.

COMANDO:
====================================================

gpg --output p1secret.gpg --symmetric \
> --cipher-algo AES256 fichero

Para no sobrescribir el nombre de p1secret.gpg, el fichero se llamará foto.gpg

El secreto para descifrar será: _-_F0to_-_

====================================================

12. Haga lo mismo que en el apartado anterior usando el comando
openssl. Tiene que usar el modo CBC.

COMANDO:
====================================================

openssl aes-256-cbc -in fichero -out foto.ssl
enter aes-256-cbc encryption password: _-_F0to_-_

====================================================

13. Calcule el resumen hash SHA-1 para los dos ficheros anteriores.
¿Coinciden? ¿Deberían coincidir? ¿Por qué?

COMANDO Y RESPUESTA:
====================================================

gpg --print-md SHA1 foto.gpg 
foto.gpg: 7549 270F F21B 3B98 7925  7F43 FF3B 6F2B FE72 B621

gpg --print-md SHA1 foto.ssl 
foto.ssl: D089 B094 A1BC 91D9 C1B1  08D2 D395 6202 DCBE D622

No coinciden, ya que al cifrar se han usado distintos modos de cifrado.

====================================================

14. Descifre ambos ficheros y compruebe que los datos descifrados son
exactamente los mismos que los originales.

COMANDOS:
====================================================
gpg --output fotoDescifradaGPG --decrypt foto.gpg
	gpg: datos cifrados AES256
	gpg: cifrado con 1 contraseña
	nos piden la clave para descifrar, que es: _-_F0to_-_

openssl aes-256-cbc -d -in foto.ssl -out fotoDescifradaSSL
	enter aes-256-cbc decryption password: _-_F0to_-_

Para comprobar que son iguales usamos el comando diff:
diff fichero fotoDescifradaGPG 
diff fichero fotoDescifradaSSL
Como no aparece ningún mensaje de error, los ficheros son iguales.

====================================================

15. Genere un certificado X.509 en texto plano para la compañía ACME,
con correo electrónico pepe@acme.jp. La clave RSA tiene que ser de
4096 bits y el certificado debe ser válido por un año desde su
creación. Indique su número de serie:

COMANDOS:
====================================================

openssl req -new -nodes -x509 -newkey 4096 \
	-out certACME.pem -keyout privkey.pem -days 365 \
	-subj "/C=DE/ST=NRW/L=Earth/O=Random\
		Company/OU=IT/CN=ACME/\
		emailAddress=pepe@acme.jp"

Para obtenerlo en texto plano:
openssl x509 -in certACME.pem -inform PEM -text

Serial Number: 14544200284603126822 (0xc9d76119b1e79426)

====================================================

16. ¿Cómo puede enviar la clave privada del certificado anterior como
cuerpo de un correo electrónico, en texto plano y aplanado en PEM a un
compañero (de los del ejercicio 7)? ¿Puede el profesor descifrar dicho
mensaje si se hace con el correo electrónico enviado? ¿Y si le roba
sus anillos de claves de su directorio $HOME/.gnugp?

COMANDO Y RESPUESTAS:
====================================================

En el ejercicio anterior ya se aplano en PEM.
La opción de línea de órdenes --sign se usa para generar una firma digital. 
El documento que se desea firmar es la entrada, y la salida es el documento firmado.

gpg --output privkey.pem --sign privkey

Para cifrar un documento se usa la opción --encrypt. El usuario debe tener las claves 
públicas de los pretendidos destinatarios. El programa espera recibir como entrada 
el nombre del documento que se desea cifrar o, si éste se omite, una entrada típica. 
El resultado cifrado se coloca en la salida típica o donde se haya especificado 
mediante la opción --output. El documento se comprime como medida adicional de 
seguridad, aparte de cifrarlo.

gpg --armor --output privkey --encrypt --recipient larb_90@hotmail.com privkey.pem

Si roba el correo no podría descifrarlo porque le hace falta la clave privada.
Todas las claves privadas van al anillo de claves privadas, por lo que si roba las 
claves del directorio, si podría descifrar el mensaje.

====================================================

17. ¿Cómo tendría que descifrar y verificar su compañero el mensaje
del punto anterior?

RESPUESTA:
====================================================

Para verificar la firma y extraer el documento se usa la opción --decrypt
gpg --output privkey --decrypt privkey.pem

====================================================

18. ¿Cuál es el número de serie y el fingerprint del certificado
X509 que usa www.urjc.es?

COMANDOS:
====================================================

openssl s_client -showcerts -servername www.urjc.es \
-connect www.urjc.es:443 </dev/null > urjc.pem

En el fichero urjc se han guardado dos certificados:
	www.urjc.es
		Identidad: www.urjc.es
		Verificado por: TERENA SSL High Assurance CA 3
		Caduca: 05/07/17

	TERENA SSL High Assurance CA 3
		Identidad: TERENA SSL High Assurance CA 3
		Verificado por: DigiCert High Assurance EV Root CA
		Caduca: 18/11/24


serialNumber = Q2803011B

openssl x509 -in urjc.pem -noout -sha1 -fingerprint
SHA1 Fingerprint=3D:77:F4:F2:1C:AF:D2:D6:27:96:92:55:CD:07:08:24:6F:AE:B2:50

====================================================

19. Verifique la cadena de confianza del certificado del punto anterior 
con el comando openssl. En un sistema GNU/Linux, los certificados raíz
del sistema se encuentran en el directorio /etc/ssl/certs.

COMANDOS:
====================================================
Para verificar la cadena de confianza usamos:

openssl verify -verbose -CAfile urjc.pem /etc/ssl/certs/WoSign.pem
/etc/ssl/certs/WoSign.pem: OK

====================================================

20. Entregue este fichero con las respuestas, firmado y cifrado
para que sólo Enrique Soriano pueda leerlo. El fichero se tiene
que llamar practica.gpg. También debe entregar un fichero con su
clave pública, llamado clave.gpg. 

Especifique los comandos que va a ejecutar para crear el fichero
practica.gpg:

RESPUESTA:
====================================================

gpg -o practica.gpg --sign --encrypt -r enrique.soriano@urjc.es practica.txt

====================================================

---------------------------------------------------------
Herramientas criptograficas
---------------------------------------------------------

Importo la clave publica con el siguiente comando:
gpg --import nombre_del_fichero.?

Para exportar mi clave publica utilizo:
gpg --output claveSaul.asc --armor --export saul@hotmail.com

Utilizo la opcion --armor para aplanarla en base64.

para mirar el fingerprint, primero listo las claves que tengo con:
gpg --list-key

edito la clave, para ver su fingerprint con el siguiente comando:
gpg --edit-key EBBA1C93
>fpr

El nivel de confianza sirve, para que si alguien me envia un mensaje, dependiendo
del nivel de confianza puedo estar seguro de que esa persona no se hace pasar
por alguien mas. "marginal" quiere decir que no confio en esa persona y necesito
varias claves que verifiquen a este usuario. "fully" quiere decir que le doy un 
nivel de confianza completo, es decir acepto todo lo que me venga de este usuario.

firmar una clave:
Antes de firmar la clave, verifico su fingerprint y le asigno un nivel de confianza
para asignarle el nivel de confianza:
gpg --edit-key EBBA1C93
>trust
y le doy un nivel de confianza.

Para firmarla:
gpg --edit-key EBBA1C93
>sign

para verificar si un fichero esta firmado correctamente:
gpg --verify tb1.asc

Para descifrar un fichero cifrado de clave simetrica con GPG:
gpg --output secreto --decrypt secreto.gpg


Para descifrar un fichero de clave simetrica con OpenSSL:
openssl aes-256-cbc -d -in secreto.ssl -out secretopenssl


para ver el serial number de un certificado X.509:
openssl x509 -in cert.pem -inform PEM -text

Para ver el resumen hash:
gpg --print-md SHA1 nombre_del_fichero.?
